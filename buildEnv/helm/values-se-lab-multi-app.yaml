
serviceaccount: webhook-instrumentor
deploymentName: webhook-server
webhookName: webhook-appd
# namespacesEnabled is optional list of namespaces, where webhook would be applied. 
# If missing, all namespaces will be enabled, except kubernetes system namespaces
# namespacesEnabled:
# - ns1
# - ns2
#
# namespacesDisabled is optional list of namespaces, where webhook would not be applied. 
# If missing, all namespaces will be enabled, except kubernetes system namespaces 
# (and namespace where the webook itself is running)
# namespacesDisabled:
# - ns3
#
# enabledForPodsWithLabels is optional safety belt to try to instrument only pods
# having set labels to a specific values
# enabledForPodsWithLabels:
# - appdInstr
#
# number of replicas for webhook server
replicas: 1
certValidityDays: 1024
# failure policy can be Fail or Ignore. 
# Ignore is safer - should the webhook fail or be unresponsive for timeoutSeconds, pod gets created unchanged
timeoutSeconds: 2
failurePolicy: Ignore

# optional - certs information. If missing, certs will be generated dynamically, but that does 
# not work with helm upgrade (except on OpenShift with service CA usage)
# certs:
#   tlsCert:
#   tlsKey:
#   caCert:

# optional - useServiceCAonOCP: true - if set, on OpenShift, Service CA certificates will be used
useServiceCAonOCP: true

# service type and port for webhook server
service:
  type: ClusterIP
  port: 443

# image for pods running the webhook functionality
image:
  image: docker.io/chrlic/appd-webhook-instrumentor:v1.0.3-exp
  pullPolicy: Always

# enables exceptions from instrumentation rules via namespaced CRD
useCrdConfig: false

# optional AppDynamics controller access information - required if 
# AppDynamics native/hybrid agents are used
appdController:
  host: se-lab.saas.appdynamics.com
  port: "443"
  isSecure: true
  accountName: se-lab
  accessKey: "hj6a4d7h2cuq"
  # useProxy: true
  # proxyHost: proxy.corm.com
  # proxyPort: "8080"
  otelEndpoint: https://pdx-sls-agent-api.saas.appdynamics.com
  otelHeaderKey: "1a7da67164c06228bb58bd7df1cf435a1912372f6e411229217dc1a28829a01d"

instrumentationTemplates:
  - name: Java_Default
    injectionRules:
      # technology = java | dotnetcore | nodejs 
      technology: java
      image: appdynamics/java-agent:latest
      javaEnvVar: JAVA_TOOL_OPTIONS
      applicationNameSource: label
      applicationNameLabel: appdAppName
      tierNameSource: auto
      # usePodNameForNodeName: true

instrumentationRules:
  - name: Java1
    matchRules:
      namespaceRegex: .*
      labels:
      - language: java
    injectionRules:
      template: Java_Default
      technology: java
      image: appdynamics/java-agent:latest
      javaEnvVar: _JAVA_OPTIONS
      logLevel: debug
